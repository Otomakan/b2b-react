{
  "_args": [
    [
      {
        "raw": "reassemble@^0.5.6",
        "scope": null,
        "escapedName": "reassemble",
        "name": "reassemble",
        "rawSpec": "^0.5.6",
        "spec": ">=0.5.6 <0.6.0",
        "type": "range"
      },
      "C:\\Users\\jeanguillaume\\OneDrive\\Tech docs\\Coding\\Javascript\\MERN\\B2PayReact\\my-app\\node_modules\\react-css-transition"
    ]
  ],
  "_from": "reassemble@>=0.5.6 <0.6.0",
  "_id": "reassemble@0.5.6",
  "_inCache": true,
  "_location": "/reassemble",
  "_nodeVersion": "6.9.5",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/reassemble-0.5.6.tgz_1487077708277_0.29055005707778037"
  },
  "_npmUser": {
    "name": "wikiwi",
    "email": "vinh@wikiwi.io"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "reassemble@^0.5.6",
    "scope": null,
    "escapedName": "reassemble",
    "name": "reassemble",
    "rawSpec": "^0.5.6",
    "spec": ">=0.5.6 <0.6.0",
    "type": "range"
  },
  "_requiredBy": [
    "/react-css-transition"
  ],
  "_resolved": "https://registry.npmjs.org/reassemble/-/reassemble-0.5.6.tgz",
  "_shasum": "0162c769ff3d5a25a15c6296b0c4653c0014d8e0",
  "_shrinkwrap": null,
  "_spec": "reassemble@^0.5.6",
  "_where": "C:\\Users\\jeanguillaume\\OneDrive\\Tech docs\\Coding\\Javascript\\MERN\\B2PayReact\\my-app\\node_modules\\react-css-transition",
  "author": {
    "name": "Chi Vinh Le and contributors",
    "url": "https://github.com/wikiwi/reassemble/graphs/contributors"
  },
  "bugs": {
    "url": "https://github.com/wikiwi/reassemble/issues"
  },
  "dependencies": {
    "fbjs": "^0.8.9"
  },
  "description": "Fast Library for the Composition of React Higher-Order-Components",
  "devDependencies": {
    "@types/benchmark": "^1.0.30",
    "@types/chai": "^3.4.34",
    "@types/enzyme": "^2.5.37",
    "@types/jsdom": "^2.0.29",
    "@types/mocha": "^2.2.32",
    "@types/react": "^15.0.4",
    "@types/react-dom": "^0.14.21",
    "@types/recompose": "^0.20.2",
    "@types/sinon": "^1.16.31",
    "awesome-typescript-loader": "^3.0.0-beta.17",
    "benchmark": "^2.1.3",
    "cash-rm": "^0.2.0",
    "chai": "^3.5.0",
    "coveralls": "^2.11.14",
    "cross-env": "^3.1.3",
    "enzyme": "^2.5.1",
    "eslint": "^3.8.1",
    "eslint-config-airbnb-base": "^9.0.0",
    "eslint-plugin-import": "^2.0.1",
    "gulp": "^3.9.1",
    "gulp-eslint": "^3.0.1",
    "gulp-jsonlint": "^1.1.2",
    "gulp-sourcemaps": "^2.2.0",
    "gulp-tslint": "^7.0.1",
    "gulp-typescript": "^3.1.3",
    "gulp-yaml-validate": "^1.0.2",
    "jsdom": "^9.9.1",
    "merge2": "^1.0.2",
    "mocha": "^3.1.2",
    "nyc": "^10.1.2",
    "react": "^15.3.2",
    "react-addons-test-utils": "^15.3.2",
    "react-dom": "^15.3.2",
    "recompact": "^1.1.0",
    "recompose": "^0.21.2",
    "sinon": "^2.0.0-pre.4",
    "ts-node": "^2.0.0",
    "tslint": "^4.1.1",
    "typescript": "^2.1.5",
    "webpack": "^2.2.0-rc.1"
  },
  "directories": {},
  "dist": {
    "shasum": "0162c769ff3d5a25a15c6296b0c4653c0014d8e0",
    "tarball": "https://registry.npmjs.org/reassemble/-/reassemble-0.5.6.tgz"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "dist",
    "lib",
    "cjs"
  ],
  "gitHead": "4319e78dba5a43460d2f6c249e9f5bed1cd195f1",
  "homepage": "https://github.com/wikiwi/reassemble",
  "jsnext:main": "./lib/index.js",
  "keywords": [
    "react",
    "hoc",
    "composition",
    "recompose"
  ],
  "license": "MIT",
  "main": "./cjs/index.js",
  "maintainers": [
    {
      "name": "wikiwi",
      "email": "vinh@wikiwi.io"
    }
  ],
  "module": "./lib/index.js",
  "name": "reassemble",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^0.14.0 || ^15.0.0-0"
  },
  "readme": "# reassemble\n\n_reassemble_ is a library for the composition of React Higher-Order-Components optimized for performance.\n\n[![NPM Version Widget]][npm version]\n[![Build Status Widget]][build status]\n[![Coverage Widget]][coverage]\n\n## reassemble vs recompose\n\n_reassemble_ is very similar to [_recompose_](https://github.com/acdlite/recompose). Conceptually both projects differ in such way that _recompose_ uses HOCs as their building blocks, whereas _reassemble_ uses _Composables_ which are just a collection of callbacks. Most noticeably using _reassemble_ only results in a single Higher-Order-Component and thus has a significant higher performance. It also solves the problem of [Dev Tools Ballooning](https://cloud.githubusercontent.com/assets/5077042/12974970/4c6b7d3a-d0c9-11e5-9b92-9cee3b015f8c.png) which is an issue in _recompose_.\n\n## Using recompose together with reassemble\n\nBoth projects are not mutual exclusive but _reassemble_ can be used perfectly together with _recompose_. In the end _reassemble_ just produces a Higher-Order-Component that fits in nicely with the composition tools of _recompose_.\n\n## Performance\n\nAt the moment _recompose_ is a bit faster in simple compositions (though we plan to close this gap) and _reassemble_ performs  better in complex composition.\n\n[Check out current benchmarks](./benchmark)\n\n## Installation\n\n```sh\nnpm install reassemble --save\n```\n\n## Usage\n\n```js\nimport { assemble, withState, mapProps } from \"reassemble\"\n\nconst enhance = assemble(\n  withState(/*...args*/),\n  mapProps(/*...args*/),\n);\nconst EnhancedComponent = enhance(BaseComponent);\n```\n\n_Note: `assemble` is also exported with the alias `compose` to allow easy transition from recompose to reassemble_\n\n### Size optimization\n\n_reassemble_ exports also as ES6 modules and as such _tree shaking_ (e.g. with _webpack 2_) can be used to effectively reduce file size.\n\nWithout _tree shaking_ you can import the modules explicitly:\n\n```js\nimport mapProps from \"reassemble/lib/mapProps\"\nimport withState from \"reassemble/lib/withState\"\n```\n\nAnd for ES5 projects:\n\n```js\nconst mapProps = require(\"reassemble/cjs/mapProps\").mapProps\nconst withState = require(\"reassemble/cjs/withState\").withState\n```\n\n## Combining\n\nMultiple _Composables_ can be combined into one using `combine()` which makes it easy to define your own:\n\n```js\nexport const withClickCounter = combine(\n  withState('counter', 'setCounter', 0),\n  withHandlers({\n    onClick: ({counter, setCounter}) => setCounter(counter + 1),\n  }),\n);\n```\n\nThis is also useful for some _Composables_ like `branch` that takes another _Composable_ as an argument.\n\n## Support for Symbols\n\nMost of the _Composables_ supports the use of [ES6 Symbols](https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Symbol). You can use _Symbols_ to pass _hidden_ props among your _Composables_.\n\n_* In some cases TypeScript users will [lose type information](https://github.com/Microsoft/TypeScript/issues/5579)._\n\n## Note for TypeScript users\n\n_reassemble_ is written in _TypeScript_ and as such comes with its own definitions. They do not follow the same type definitions as _recompose_ so some manual work is required here.\n\n## Support of recompose HOCs as Composables\n\n| Name                                                  | Support | Remarks |\n| ----------------------------------------------------- | :-----: | ------- |\n| [branch][docs branch]                                 | ✅       ||\n| [defaultProps][docs defaultProps]                     | ✅       ||\n| [flattenProps][docs flattenProps]                     | ✅       ||\n| [getContext][docs getContext]                         | ✅       ||\n| [lifecycle][docs lifecycle]                           | ❌       | Use [Lifecycle Composables](#lifecycle)  |\n| [mapProps][docs mapProps]                             | ✅       ||\n| [mapPropsStream][docs mapPropsStream]                 | ❌       | File an issue if you really need this |\n| [onlyUpdateForKeys][docs onlyUpdateForKeys]           | ✅       ||\n| [onlyUpdateForPropTypes][docs onlyUpdateForPropTypes] | ❌       | Use [onlyUpdateForKeys][docs onlyUpdateForKeys] instead |\n| [renameProp][docs renameProp]                         | ✅       ||\n| [renameProps][docs renameProps]                       | ✅       ||\n| [renderComponent][docs renderComponent]               | ✅       ||\n| [renderNothing][docs renderNothing]                   | ✅       ||\n| [setDisplayName][docs setDisplayName]                 | ✅       ||\n| [setPropTypes][docs setPropTypes]                     | ✅       ||\n| [setStatic][docs setStatic]                           | ✅       ||\n| [shouldUpdate][docs shouldUpdate]                     | ✅       ||\n| [pure][docs pure]                                     | ✅       ||\n| [withContext][docs withContext]                       | ✅       | Context will not be available in other _Composables_ of the same Component |\n| [withHandlers][docs withHandlers]                     | ✅       ||\n| [withProps][docs withProps]                           | ✅       ||\n| [withPropsOnChange][docs withPropsOnChange]           | ✅       ||\n| [withReducer][docs withReducer]                       | ✅       ||\n| [withState][docs withState]                           | ✅       ||\n| [toClass][docs toClass]                               | ✅       ||\n\n## Composables introduced by reassemble\n\n * [`debug()`](#debug)\n * [`noOp`](#noop)\n * [`omitProps()`](#omitprops)\n * [`isolate()`](#isolate)\n * [`integrate()`](#integrate)\n * [`onWillMount()`](#onwillmount)\n * [`onDidMount()`](#ondidmount)\n * [`onWillUnmount()`](#onwillunmount)\n * [`onWillReceiveProps()`](#onwillreceiveprops)\n * [`onWillUpdate()`](#onwillupdate)\n * [`onDidUpdate()`](#ondidupdate)\n\n### `debug()`\n\n```ts\ndebug(callback: (props) => void): Composable\n```\n\nRuns callback with current props. Defaults to logging to the console.\n\n### `noOp`\n\n```ts\nnoOp: Composable\n```\n\n### `omitProps()`\n\n```ts\nomitProps(...keys: string[]): Composable\n```\n\nOmit selected props.\n\n### `isolate()`\n\n```ts\nisolate(...composables: Composable[]): Composable\n```\n\nRuns passed _Composables_ in isolation: any props created will be reverted.\nUse with [`integrate()`](#integrate) to selectively keep props.\n\n```ts\nisolate(\n  withProps({\n    a: 1,\n    b: 2,\n  }),\n  integrate(\"b\"),\n)\n// { b: 3 }\n```\n\n### `integrate()`\n\n```ts\nintegrate(...keys: string[]): Composable\n```\n\nSelectively keep props that are otherwise reverted in [`isolate()`](#isolate).\n\n### Lifecycle\n\n#### `onWillMount()`\n\n```ts\nonWillMount(props): Composable\n```\n\nCalled during lifecycle `componentWillMount()`\n\n#### `onDidMount()`\n\n```ts\nonDidMount(props): Composable\n```\n\nCalled during lifecycle `componentDidMount()`\n\n#### `onWillUnmount()`\n\n```ts\nonWillUnmount(props): Composable\n```\n\nCalled during lifecycle `componentWillUnmount()`\n\n#### `onWillReceiveProps()`\n\n```ts\nonWillReceiveProps(prevProps, nextProps): Composable\n```\n\nCalled during lifecycle `componentWillReceiveProps()` and when state changes because some props are derived from state.\n\n#### `onWillUpdate()`\n\n```ts\nonWillUpdate(prevProps, nextProps): Composable\n```\n\nCalled during lifecycle `componentWillUpdate()`\n\n#### `onDidUpdate()`\n\n```ts\nonDidUpdate(prevProps, nextProps): Composable\n```\n\nCalled during lifecycle `componentDidUpdate()`\n\n## Roadmap\n\n- More performance optimizations\n- More tests\n\n## License\n\nMIT\n\n[docs branch]: https://github.com/acdlite/recompose/blob/master/docs/API.md#branch\n[docs defaultProps]: https://github.com/acdlite/recompose/blob/master/docs/API.md#defaultprops\n[docs flattenProps]: https://github.com/acdlite/recompose/blob/master/docs/API.md#flattenprops\n[docs getContext]: https://github.com/acdlite/recompose/blob/master/docs/API.md#getcontext\n[docs lifecycle]: https://github.com/acdlite/recompose/blob/master/docs/API.md#lifecycle\n[docs mapProps]: https://github.com/acdlite/recompose/blob/master/docs/API.md#mapprops\n[docs mapPropsStream]: https://github.com/acdlite/recompose/blob/master/docs/API.md#mappropsstream\n[docs omitProps]: https://github.com/acdlite/recompose/blob/master/docs/API.md#omitprops\n[docs onlyUpdateForKeys]: https://github.com/acdlite/recompose/blob/master/docs/API.md#onlyupdateforkeys\n[docs onlyUpdateForPropTypes]: https://github.com/acdlite/recompose/blob/master/docs/API.md#onlyupdateforproptypes\n[docs renameProp]: https://github.com/acdlite/recompose/blob/master/docs/API.md#renameprop\n[docs renameProps]: https://github.com/acdlite/recompose/blob/master/docs/API.md#renameprops\n[docs renderComponent]: https://github.com/acdlite/recompose/blob/master/docs/API.md#rendercomponent\n[docs renderNothing]: https://github.com/acdlite/recompose/blob/master/docs/API.md#rendernothing\n[docs setDisplayName]: https://github.com/acdlite/recompose/blob/master/docs/API.md#setdisplayname\n[docs setPropTypes]: https://github.com/acdlite/recompose/blob/master/docs/API.md#setproptypes\n[docs setStatic]: https://github.com/acdlite/recompose/blob/master/docs/API.md#setstatic\n[docs shouldUpdate]: https://github.com/acdlite/recompose/blob/master/docs/API.md#shouldupdate\n[docs pure]: https://github.com/acdlite/recompose/blob/master/docs/API.md#pure\n[docs withContext]: https://github.com/acdlite/recompose/blob/master/docs/API.md#withcontext\n[docs withHandlers]: https://github.com/acdlite/recompose/blob/master/docs/API.md#withhandlers\n[docs withProps]: https://github.com/acdlite/recompose/blob/master/docs/API.md#withprops\n[docs withPropsOnChange]: https://github.com/acdlite/recompose/blob/master/docs/API.md#withpropsonchange\n[docs withReducer]: https://github.com/acdlite/recompose/blob/master/docs/API.md#withreducer\n[docs withState]: https://github.com/acdlite/recompose/blob/master/docs/API.md#withstate\n[docs toClass]: https://github.com/acdlite/recompose/blob/master/docs/API.md#toclass\n\n[npm version]: https://www.npmjs.com/package/reassemble\n\n[npm version widget]: https://img.shields.io/npm/v/reassemble.svg?style=flat-square\n\n[build status]: https://travis-ci.org/wikiwi/reassemble\n\n[build status widget]: https://img.shields.io/travis/wikiwi/reassemble/master.svg?style=flat-square\n\n[coverage]: https://codecov.io/gh/wikiwi/reassemble\n\n[coverage widget]: https://codecov.io/gh/wikiwi/reassemble/branch/master/graph/badge.svg\n\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/wikiwi/reassemble.git"
  },
  "scripts": {
    "all": "npm run lint && npm run test:coverage && npm run build",
    "bench": "cross-env NODE_ENV=production TS_NODE_COMPILER_OPTIONS='{\"module\":\"commonjs\"}' ts-node",
    "build": "gulp && webpack && cross-env BUILD_MINIFIED=true webpack",
    "ci:coveralls": "cat coverage/lcov.info | coveralls",
    "clean": "rm -r -f dist lib cjs coverage",
    "lint": "gulp lint",
    "release": "npm version -m 'reassemble release %s'",
    "test": "cross-env TS_NODE_COMPILER_OPTIONS='{\"module\":\"commonjs\"}' mocha --opts mocha.opts",
    "test:coverage": "nyc npm run test",
    "test:watch": "npm run test:unit -- --watch"
  },
  "typings": "./lib/index.d.ts",
  "version": "0.5.6"
}
